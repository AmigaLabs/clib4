#
# $Id: libpthread.gmk,v 1.1 2023-04-23 10:09:48 clib4devs Exp $
#

ifndef SPE
    OUT_STATIC := $(BUILD_DIR)/obj/libpthread
    OUT_SHARED := $(BUILD_DIR)/obj.shared/libpthread
else
    OUT_STATIC := $(BUILD_DIR)/obj/soft-float/libpthread
    OUT_SHARED := $(BUILD_DIR)/obj.shared/soft-float/libpthread
endif

ifeq ($(SHARED),yes)
    LIBS += $(OUTPUT_LIB)/libpthread.so
endif
ifeq ($(STATIC),yes)
    LIBS += $(OUTPUT_LIB)/libpthread.a
endif

PTHREAD_LIB := \
    pthread/common.o \
    pthread/pthread.o \
    pthread/pthread_attr_destroy.o \
    pthread/pthread_attr_getdetachstate.o \
    pthread/pthread_attr_getguardsize.o \
    pthread/pthread_attr_getinheritsched.o \
    pthread/pthread_attr_getscope.o \
    pthread/pthread_attr_getschedparam.o \
    pthread/pthread_attr_getschedpolicy.o \
    pthread/pthread_attr_getstack.o \
    pthread/pthread_attr_getstacksize.o \
    pthread/pthread_attr_init.o \
    pthread/pthread_attr_setdetachstate.o \
    pthread/pthread_attr_setguardsize.o \
    pthread/pthread_attr_setinheritsched.o \
    pthread/pthread_attr_setscope.o \
    pthread/pthread_attr_setschedparam.o \
    pthread/pthread_attr_setschedpolicy.o \
    pthread/pthread_attr_setstack.o \
    pthread/pthread_attr_setstacksize.o \
    pthread/pthread_barrierattr_init.o \
    pthread/pthread_barrierattr_destroy.o \
    pthread/pthread_barrierattr_getpshared.o \
    pthread/pthread_barrierattr_setpshared.o \
    pthread/pthread_barrier_destroy.o \
    pthread/pthread_barrier_init.o \
    pthread/pthread_barrier_wait.o \
    pthread/pthread_cancel.o \
    pthread/pthread_cleanup_pop.o \
    pthread/pthread_cleanup_push.o \
    pthread/pthread_concur.o \
    pthread/pthread_cond_broadcast.o \
    pthread/pthread_cond_destroy.o \
    pthread/pthread_cond_init.o \
    pthread/pthread_cond_signal.o \
    pthread/pthread_cond_timedwait.o \
    pthread/pthread_cond_timedwait_relative_np.o \
    pthread/pthread_cond_wait.o \
    pthread/pthread_condattr_destroy.o \
    pthread/pthread_condattr_init.o \
    pthread/pthread_condattr_getpshared.o \
    pthread/pthread_condattr_setpshared.o \
    pthread/pthread_create.o \
    pthread/pthread_detach.o \
    pthread/pthread_equal.o \
    pthread/pthread_exit.o \
    pthread/pthread_getattr_np.o \
    pthread/pthread_getconcurrency.o \
    pthread/pthread_getname_np.o \
    pthread/pthread_getschedparam.o \
    pthread/pthread_getspecific.o \
    pthread/pthread_join.o \
    pthread/pthread_key_create.o \
    pthread/pthread_key_delete.o \
    pthread/pthread_kill.o \
    pthread/pthread_mutex_destroy.o \
    pthread/pthread_mutex_init.o \
    pthread/pthread_mutex_lock.o \
    pthread/pthread_mutex_timedlock.o \
    pthread/pthread_mutex_trylock.o \
    pthread/pthread_mutex_unlock.o \
    pthread/pthread_mutexattr_destroy.o \
    pthread/pthread_mutexattr_getpshared.o \
    pthread/pthread_mutexattr_gettype.o \
    pthread/pthread_mutexattr_init.o \
    pthread/pthread_mutexattr_setpshared.o \
    pthread/pthread_mutexattr_settype.o \
    pthread/pthread_num_processors_np.o \
    pthread/pthread_once.o \
    pthread/pthread_rwlockattr_getpshared.o \
    pthread/pthread_rwlockattr_setpshared.o \
    pthread/pthread_rwlock_destroy.o \
    pthread/pthread_rwlock_init.o \
    pthread/pthread_rwlock_rdlock.o \
    pthread/pthread_rwlock_timedrdlock.o \
    pthread/pthread_rwlock_timedwrlock.o \
    pthread/pthread_rwlock_tryrdlock.o \
    pthread/pthread_rwlock_trywrlock.o \
    pthread/pthread_rwlock_unlock.o \
    pthread/pthread_rwlock_wrlock.o \
    pthread/pthread_rwlockattr_destroy.o \
    pthread/pthread_rwlockattr_init.o \
    pthread/pthread_self.o \
    pthread/pthread_setconcurrency.o \
    pthread/pthread_setcancelstate.o \
    pthread/pthread_setcanceltype.o \
    pthread/pthread_setname_np.o \
    pthread/pthread_setschedparam.o \
    pthread/pthread_setschedprio.o \
    pthread/pthread_setspecific.o \
    pthread/pthread_spin_destroy.o \
    pthread/pthread_spin_init.o \
    pthread/pthread_spin_lock.o \
    pthread/pthread_spin_trylock.o \
    pthread/pthread_spin_unlock.o \
    pthread/pthread_testcancel.o \
    pthread/sched_get_priority_max.o \
    pthread/sched_get_priority_min.o \
    pthread/sched_yield.o \
    pthread/semaphore.o

SOURCES_SHARED = $(addprefix $(OUT_SHARED)/, $(PTHREAD_LIB))
SOURCES_STATIC = $(addprefix $(OUT_STATIC)/, $(PTHREAD_LIB))

# Dependencies to rebuild if the library version changes

$(OUT_STATIC)/%.o : CFLAGS += $(LARGEDATA)
$(OUT_SHARED)/%.o : CFLAGS += $(PIC) $(LARGEDATA)

ifdef SPE
$(OUT_STATIC)/%.o : $(LIB_DIR)/%.c
	$(VERBOSE)$(COMPILE_SPE)

$(OUT_SHARED)/%.o : $(LIB_DIR)/%.c
	$(VERBOSE)$(COMPILE_SHARED_SPE)
else
$(OUT_STATIC)/%.o : $(LIB_DIR)/%.c
	$(VERBOSE)$(COMPILE)

$(OUT_SHARED)/%.o : $(LIB_DIR)/%.c
	$(VERBOSE)$(COMPILE_SHARED)
endif

$(OUTPUT_LIB)/libpthread.a : $(SOURCES_STATIC)
	$(VERBOSE)$(MAKELIB)

$(OUTPUT_LIB)/libpthread.so : $(OUTPUT_LIB)/libc.so $(SOURCES_SHARED)
	$(VERBOSE)$(MAKESHARED)
