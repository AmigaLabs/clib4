#
# $Id: Makefile,v 2.1 2021-03-26 11:28:07 clib2devs Exp $
#
# :ts=8
#
# -*- mode: makefile; -*-

##############################################################################

.PHONY : all all-targets clean version cvs-tag

# You may have to change the following sets of macro definitions which will
# be used throughout the build makefile. These definitions cover the paths
# to look into for the operating system and networking header files, and
# the names and parameters passed to the program which actually do the
# compilation, library building and cleanup work.
#
# Note that for either set you still need the GNU make utility to build the
# library!

# These are for the cross compiler, with the operating system header files
# stored in "/V/include" and the network header files in a local directory
# called "netinclude".
UNAME := $(shell uname)

INSTALL_PREFIX ?= /usr/ppc-amigaos/SDK/clib2
SDK_INCLUDE ?= /usr/ppc-amigaos/SDK/include

CC := ppc-amigaos-gcc
AR := ppc-amigaos-ar -q
LD := ppc-amigaos-ld
RANLIB := ppc-amigaos-ranlib

# On AmigaOS use native commands
ifeq ($(UNAME), AmigaOS)
    COPY := copy
    DELETE := delete all quiet force
    MAKEDIR := makedir all force
else
    COPY := cp -r
    DELETE := rm -rf
    MAKEDIR := mkdir -p
endif

# Enabling the LOG_COMMAND has the consequence that a rule will not
# fail on an error because only the exit status from the tee command
# will be considered
#LOG_COMMAND := 2>&1 | tee -a compiler.log
LOG_COMMAND :=
LIB_ROOT ?= $(shell pwd)
LIB_DIR = $(LIB_ROOT)/library
BUILD_DIR = $(LIB_ROOT)/build
OUTPUT_LIB = $(BUILD_DIR)/lib

##############################################################################

WARNINGS := \
	-Wall -W -Wextra -Wpointer-arith -Wsign-compare -Wmissing-prototypes \
	-Wundef -Wmissing-declarations -Wunused -Wwrite-strings -Wno-array-bounds -Wno-missing-braces -Wno-unused-value -Wno-comment \
	-Wno-deprecated-declarations -Wno-sign-compare -Wno-cast-function-type -Wno-unused-variable -Wno-parentheses -Wno-missing-prototypes \
	-Wstrict-aliasing -Wno-shadow -Wno-implicit-fallthrough -Wno-prio-ctor-dtor # -Werror -Wbad-function-cast -Wconversion -Wformat

PIC		   := -fPIC 
INCLUDES   := -I$(LIB_DIR)/include \
				-Ilibrary \
                -I$(LIB_DIR)/external/include \
				-I$(SDK_INCLUDE) \
				-I$(LIB_DIR)/debug \
				-I$(LIB_DIR)/amiga \
				-I$(LIB_DIR)/profile \
				-I$(LIB_DIR)/math \
				-I$(LIB_DIR)/argz \
				-I$(LIB_DIR)/usergroup \
				-I$(LIB_DIR)/string \
				-I$(LIB_DIR)/ctype \
				-I$(LIB_DIR)/stdio \
				-I$(LIB_DIR)/stdlib \
				-I$(LIB_DIR)/socket \
				-I$(LIB_DIR)/unistd \
				-I$(LIB_DIR)/time \
				-I$(LIB_DIR)/wchar \
				-I$(LIB_DIR)/posix \
				-I$(LIB_DIR)/termios \
				-I$(LIB_DIR)/search \
				-I$(LIB_DIR)/inttypes \
				-I$(LIB_DIR)/locale \
				-I$(LIB_DIR)/dirent \
				-I$(LIB_DIR)/stat \
				-I$(LIB_DIR)/mount

SHARED   := $(if $(SHARED),$(SHARED),yes)
STATIC   := $(if $(STATIC),$(STATIC),yes)

LARGEDATA := -msdata=data
OPTIONS  := $(LARGEDATA) -DHAVE_SYSV -D_FILE_OFFSET_BITS=64 -D_LARGEFILE_SOURCE -D__CLIB2__ -Wa,-mregnames -fno-builtin -nostdlib -D_GNU_SOURCE -D_XOPEN_SOURCE -D_USE_GNU
OPTIMIZE := -O3 -mmultiple -mupdate -mstrict-align

ifndef DEBUG
    OPTIMIZE := $(OPTIMIZE) -gstabs -DNDEBUG
else
    OPTIMIZE := $(OPTIMIZE) -gstabs -DDEBUG
endif

CFLAGS     := $(COMPILER_VERSION) $(WARNINGS) $(OPTIMIZE) $(OPTIONS) $(INCLUDES) -D__USE_INLINE__
CFLAGS_N   := $(COMPILER_VERSION) $(WARNINGS) $(OPTIMIZE) $(OPTIONS) $(INCLUDES)
AFLAGS     := $(COMPILER_VERSION) -Wa,-mregnames

VERBOSE    := @

##############################################################################

# This is the first target: it depends on all the targets

all: prepare all-targets all-libs

##############################################################################

# The LIBS variable is updated by each of the included library makefiles.

LIBS :=
MAIN_LIB:=

include libc.gmk
include libm.gmk
include libamiga.gmk
include libprofile.gmk
include libpthread.gmk
include libcrypt.gmk

prepare:
	-$(MAKEDIR) $(INSTALL_PREFIX)/lib
	-$(MAKEDIR) $(INSTALL_PREFIX)/include

all-targets: \
	$(OUTPUT_LIB)/crt0.o \
	$(OUTPUT_LIB)/crtbegin.o \
	$(OUTPUT_LIB)/crtend.o \
	$(OUTPUT_LIB)/shcrtbegin.o \
	$(OUTPUT_LIB)/shcrtend.o \
	$(MAIN_LIB)
$(info $(MAIN_LIB))

all-libs: $(LIBS)

##############################################################################

# Delete all object files and libraries
clean:
	-$(DELETE) $(BUILD_DIR)/obj
	-$(DELETE) $(BUILD_DIR)/obj.shared	
	-$(DELETE) $(OUTPUT_LIB)
	-$(DELETE) $(BUILD_DIR)/compiler.log
	-$(DELETE) clib2.lha
	-$(DELETE) clib2.bak
	-cd test_programs; make clean

##############################################################################

# Update the version numbers bound to the individual libraries
version:
	$(COPY) c.lib_rev.rev amiga.lib_rev.rev
	$(COPY) c.lib_rev.rev profile.lib_rev.rev
	$(COPY) c.lib_rev.rev m.lib_rev.rev
	bumprev amiga.lib
	bumprev c.lib
	bumprev profile.lib
	bumprev m.lib

##############################################################################

# General build rules for all object files and the individual libraries

$(OUTPUT_LIB)/%.o : AFLAGS += $(LARGEDATA)
$(OUTPUT_LIB)/%.o : %.S
	$(VERBOSE)$(ASSEMBLE)

$(OUTPUT_LIB)/%.o : CFLAGS += $(LARGEDATA)
$(OUTPUT_LIB)/%.o : %.c
	$(VERBOSE)$(COMPILE)

$(OUTPUT_LIB)/crt0.o : $(LIB_DIR)/crt0.S
	$(VERBOSE)$(ASSEMBLE)
	-$(COPY) $(OUTPUT_LIB)/crt0.o $(INSTALL_PREFIX)/lib/

$(OUTPUT_LIB)/crtbegin.o : CFLAGS += -fno-aggressive-loop-optimizations
$(OUTPUT_LIB)/crtbegin.o : $(LIB_DIR)/crtbegin.c
	$(VERBOSE)$(COMPILE)
	-$(COPY) $(OUTPUT_LIB)/crtbegin.o $(INSTALL_PREFIX)/lib/

$(OUTPUT_LIB)/crtend.o : CFLAGS += -fno-aggressive-loop-optimizations
$(OUTPUT_LIB)/crtend.o : $(LIB_DIR)/crtend.c
	$(VERBOSE)$(COMPILE)
	-$(COPY) $(OUTPUT_LIB)/crtend.o $(INSTALL_PREFIX)/lib/

$(OUTPUT_LIB)/shcrtbegin.o : CFLAGS += -O0 -fno-aggressive-loop-optimizations
$(OUTPUT_LIB)/shcrtbegin.o : $(LIB_DIR)/shcrtbegin.c
	$(VERBOSE)$(COMPILE)
	-$(COPY) $(OUTPUT_LIB)/shcrtbegin.o $(INSTALL_PREFIX)/lib/

$(OUTPUT_LIB)/shcrtend.o : CFLAGS += -O0 -fno-aggressive-loop-optimizations
$(OUTPUT_LIB)/shcrtend.o : $(LIB_DIR)/shcrtend.c
	$(VERBOSE)$(COMPILE)
	-$(COPY) $(OUTPUT_LIB)/shcrtend.o $(INSTALL_PREFIX)/lib/

##############################################################################

define COMPILE
$(VERBOSE)@$(MAKEDIR) $(@D)
$(VERBOSE)echo -e "\rCompiling Static \033[0;33m[$(@D)]\033[0m \r\t\t\t\t\t\t\t\t\t\t\t \033[0;31m$(@F)\033[0m"
$(VERBOSE)$(CC) $(CFLAGS) -o $@ -c $< $(LOG_COMMAND)
endef

define COMPILE_INLINE
$(VERBOSE)@$(MAKEDIR) $(@D)
$(VERBOSE)echo -e "\rCompiling Static \033[0;33m[$(@D)]\033[0m \r\t\t\t\t\t\t\t\t\t\t\t \033[0;31m$(@F)\033[0m"
$(VERBOSE)$(CC) $(CFLAGS_N) -Wno-missing-prototypes -Wno-missing-declarations -D__timespec_defined -o $@ -c $< $(LOG_COMMAND)
endef

define COMPILE_ASM
$(VERBOSE)@$(MAKEDIR) $(@D)
$(VERBOSE)echo -e "\rCompiling Static ASM \033[0;33m[$(@D)]\033[0m \r\t\t\t\t\t\t\t\t\t\t\t \033[0;31m$(@F)\033[0m"
$(VERBOSE)$(CC) -o $@ -c $< $(LOG_COMMAND)
endef

define COMPILE_SHARED
$(VERBOSE)@$(MAKEDIR) $(@D)
$(VERBOSE)echo -e "\rCompiling Shared \033[0;33m[$(@D)]\033[0m \r\t\t\t\t\t\t\t\t\t\t\t \033[0;31m$(@F)\033[0m"
$(VERBOSE)$(CC) $(CFLAGS) $(PIC) -o $@ -c $< $(LOG_COMMAND)
endef

define COMPILE_SHARED_ASM
$(VERBOSE)@$(MAKEDIR) $(@D)
$(VERBOSE)echo -e "\rCompiling Shared Asm \033[0;33m[$(@D)]\033[0m \r\t\t\t\t\t\t\t\t\t\t\t \033[0;31m$(@F)\033[0m"
$(VERBOSE)$(CC) $(PIC) -o $@ -c $< $(LOG_COMMAND)
endef

define ASSEMBLE
$(VERBOSE)@$(MAKEDIR) $(@D)
$(VERBOSE)echo -e "\rAssembling \033[0;33m[$(@D)]\033[0m \r\t\t\t\t\t\t\t\t\t\t\t \033[0;31m$(@F)\033[0m"
$(VERBOSE)$(CC) $(AFLAGS) -o $@ -c $< $(LOG_COMMAND)
endef

define COMPILE_REG
$(VERBOSE)@$(MAKEDIR) $(@D)
$(VERBOSE)echo -e "\rAssembling altivec \033[0;33m[$(@D)]\033[0m \r\t\t\t\t\t\t\t\t\t\t\t \033[0;31m$(@F)\033[0m"
$(VERBOSE)$(CC) -maltivec -mabi=altivec -mvrsave -mregnames -DVRSAVE -o $@ -c $< $(LOG_COMMAND)
endef

define MAKELIB
$(VERBOSE)@$(MAKEDIR) $(@D)
$(VERBOSE)@$(DELETE) $@
$(VERBOSE)echo -e "\rMaking Static \033[0;31m$@\033[0m"
$(VERBOSE)@$(AR) $@ $^ $(LOG_COMMAND)
$(VERBOSE)@$(RANLIB) $@ $(LOG_COMMAND)
endef

define MAKESHARED
$(VERBOSE)@$(MAKEDIR) $(@D)
$(VERBOSE)@$(DELETE) $@
$(VERBOSE)echo -e "\rMaking Shared \033[0;31m$@\033[0m"
$(VERBOSE)$(CC) -mcrt=clib2 -shared -use-dynld -o $@ $^ $(LOG_COMMAND) -Lbuild/lib -lc
endef

compile-tests:
	cd $(LIB_ROOT)/test_programs; CC="$(CC)" CXX="$(CXX)" COPY="$(COPY)" DELETE="$(DELETE)" MAKEDIR="$(MAKEDIR)" && make

install:
	$(DELETE) $(INSTALL_PREFIX)/include/*
	$(DELETE) $(INSTALL_PREFIX)/lib/*
	$(COPY) $(OUTPUT_LIB)/* $(INSTALL_PREFIX)/lib/
	$(COPY) libs/libauto.a $(INSTALL_PREFIX)/lib/
	$(COPY) $(LIB_ROOT)/library/include/* $(INSTALL_PREFIX)/include/

release:
	-$(DELETE) clib2.lha
	-$(MAKEDIR) clib2/include
	-$(MAKEDIR) clib2/lib
	-$(COPY) LICENSE* clib2/
	-$(COPY) misc clib2/
	-$(COPY) $(OUTPUT_LIB)/* clib2/lib/
	-$(COPY) $(LIB_ROOT)/library/include/* clib2/include/
	jlha -aqo7i clib2.lha clib2
	-$(DELETE) clib2