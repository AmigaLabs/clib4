#
# $Id: Makefile,v 2.1 2021-03-26 11:28:07 clib4devs Exp $
#
# :ts=8
#
# -*- mode: makefile; -*-

##############################################################################

.PHONY : all prepare all-targets all-libs clean \
	version compile-tests install release dpkg 

# You may have to change the following sets of macro definitions which will
# be used throughout the build makefile. These definitions cover the paths
# to look into for the operating system and networking header files, and
# the names and parameters passed to the program which actually do the
# compilation, library building and cleanup work.
#
# Note that for either set you still need the GNU make utility to build the
# library!

# These are for the cross compiler, with the operating system header files
# stored in "/V/include" and the network header files in a local directory
# called "netinclude".
UNAME := $(shell uname)

INSTALL_PREFIX ?= /usr/ppc-amigaos/SDK/clib4

CC := ppc-amigaos-gcc
AR := ppc-amigaos-ar -q
LD := ppc-amigaos-ld
RANLIB := ppc-amigaos-ranlib
STRIP := ppc-amigaos-strip
RANLIB := ppc-amigaos-ranlib
HOST_CXX := g++
SDK_INCLUDE ?= $(abspath $(addsuffix ../ppc-amigaos/SDK/include/,$(dir $(shell which $(word 1,$(CC))))))

# On AmigaOS use native commands
ifeq ($(UNAME), AmigaOS)
    COPY := copy
    DELETE := delete all quiet force
    MAKEDIR := makedir all force
else
    COPY := cp -r
    DELETE := rm -rf
    MAKEDIR := mkdir -p
endif

# Enabling the LOG_COMMAND has the consequence that a rule will not
# fail on an error because only the exit status from the tee command
# will be considered
#LOG_COMMAND := 2>&1 | tee -a compiler.log
LOG_COMMAND :=
LIB_ROOT ?= $(shell pwd)
LIB_DIR = $(LIB_ROOT)/library
BUILD_DIR = $(LIB_ROOT)/build
OUTPUT_LIB = $(BUILD_DIR)/lib
DPKG_LIB = clib4_1.0_amd64

##############################################################################

WARNINGS := \
	-Wall -W -Wextra -Wpointer-arith -Wsign-compare -Wmissing-prototypes \
	-Wundef -Wmissing-declarations -Wunused -Wwrite-strings -Wno-unused-value -Wno-comment -Wno-missing-braces \
	-Wno-deprecated-declarations -Wno-sign-compare -Wno-unused-variable -Wno-parentheses -Wno-missing-prototypes \
	-Wstrict-aliasing -Wno-shadow -Wno-discarded-qualifiers -Wno-unused-function -Wno-unused-parameter -Wno-strict-aliasing \
    -Wno-type-limits -Wno-cast-function-type -Wno-frame-address -Werror # -Wbad-function-cast -Wconversion -Wformat

PIC		   := -fPIC -DPIC
INCLUDES   := -I$(LIB_DIR)/include \
				-Ilibrary \
                -I$(LIB_DIR)/external/include \
				-I$(SDK_INCLUDE)/include_h \
				-I$(SDK_INCLUDE)/netinclude \
				-I$(LIB_DIR)/amiga \
				-I$(LIB_DIR)/argz \
				-I$(LIB_DIR)/ctype \
				-I$(LIB_DIR)/debug \
				-I$(LIB_DIR)/dirent \
				-I$(LIB_DIR)/fcntl \
				-I$(LIB_DIR)/inttypes \
				-I$(LIB_DIR)/locale \
				-I$(LIB_DIR)/math \
				-I$(LIB_DIR)/misc \
				-I$(LIB_DIR)/mount \
				-I$(LIB_DIR)/ndbm \
				-I$(LIB_DIR)/posix \
				-I$(LIB_DIR)/profile \
				-I$(LIB_DIR)/usergroup \
				-I$(LIB_DIR)/search \
				-I$(LIB_DIR)/shared_library \
				-I$(LIB_DIR)/socket \
				-I$(LIB_DIR)/stat \
				-I$(LIB_DIR)/stdio \
				-I$(LIB_DIR)/stdlib \
				-I$(LIB_DIR)/string \
				-I$(LIB_DIR)/termios \
				-I$(LIB_DIR)/time \
				-I$(LIB_DIR)/unistd \
				-I$(LIB_DIR)/wchar

SHARED   := $(if $(SHARED),$(SHARED),yes)
STATIC   := $(if $(STATIC),$(STATIC),yes)

LARGEDATA :=
OPTIONS  += $(LARGEDATA) -D_FILE_OFFSET_BITS=64 -D_LARGEFILE_SOURCE -Wa,-mregnames -fno-builtin -nostdlib -D_GNU_SOURCE -D_XOPEN_SOURCE -D_USE_GNU -pipe \
		-nostdinc -nostartfiles -nostdlib
OPTIMIZE := -O3 -mregnames -mmultiple -mupdate -ffp-contract=fast -mstrict-align

STABS :=
DLIBS :=

ifndef DEBUG
    OPTIMIZE += $(STABS) -DNDEBUG
else
    OPTIMIZE += -gstabs -DDEBUG
    DLIBS += $(BUILD_DIR)/lib/libdebug.a
endif

CFLAGS     := $(WARNINGS) $(OPTIMIZE) $(OPTIONS) $(INCLUDES) -D__USE_INLINE__
CFLAGS_N   := $(WARNINGS) $(OPTIMIZE) $(OPTIONS) $(INCLUDES)
AFLAGS     := -Wa,-mregnames -mstrict-align

ifdef SPE
    CC := ppc-amigaos-gcc-6.4.0
    AS := ppc-amigaos-as-6.4.0
    CMATH := -mfpu=dp_lite
    CFLAGS := $(CFLAGS) -D__SPE__ -mspe -mtune=8540 -mcpu=8540 -mabi=spe -mfloat-gprs=double $(CMATH) -fno-inline-functions -fno-partial-inlining \
                -fno-align-functions -fno-align-jumps -fno-align-loops -fno-align-labels -fno-inline-small-functions -fno-indirect-inlining -Wno-overflow -Wno-unused-but-set-variable -Wno-uninitialized #-Wdouble-promotion
    AFLAGS := $(AFLAGS) -mvrsave -D__SPE__ -mspe -mtune=8540 -mcpu=8540 -mfloat-gprs=double $(CMATH) -Wno-overflow
endif

VERBOSE    ?= @

##############################################################################

# This is the first target: it depends on all the targets

all: prepare all-targets all-libs clib4.library.debug clib4.library

##############################################################################

# The LIBS variable is updated by each of the included library makefiles.

LIBS :=
MAIN_LIB:=
OBJ_C_LIB =
OBJ_C_SRC =
OUT_SHARED_LIB := $(BUILD_DIR)/shared

include libc.gmk
include libm.gmk
include libamiga.gmk
include libdebug.gmk
include libpthread.gmk
include libcrypt.gmk
include librt.gmk
include shared.gmk

prepare:
	-$(MAKEDIR) $(BUILD_DIR)/shared
	-$(MAKEDIR) $(INSTALL_PREFIX)/lib
	-$(MAKEDIR) $(INSTALL_PREFIX)/include
# It may be the case that this makefile is invoked with an explicit CC
# assingment such as: "gcc -B /someDir/". In fact, this pattern is used within
# ADTOOLS - for that reason we take the first word and apply which on that,
# otherwise the extraneous options will cause a failure
	$(VERBOSE)which $(word 1,$(CC)); \
		if [ $$? -ne 0 ]; \
		then \
			echo "Could not locate cross compiler: '$(CC)'" 1>&2; \
			exit 1; \
		elif [ ! -d $(SDK_INCLUDE) ]; \
		then \
			echo "Could not locate SDK include folder: '$(SDK_INCLUDE)'" 1>&2; \
			exit 1 ; \
		fi

ALL_TARGETS = \
	$(OUTPUT_LIB)/crt0.o \
	$(OUTPUT_LIB)/crtbegin.o \
	$(OUTPUT_LIB)/crtend.o \
	$(OUTPUT_LIB)/shcrtbegin.o \
	$(OUTPUT_LIB)/shcrtend.o \
    $(OUT_SHARED_LIB)/shared_library/clib4.o \
    $(OUT_SHARED_LIB)/shared_library/math.o \
	$(MAIN_LIB)

ifdef SPE
    ALL_TARGETS := PatchForSPE | $(ALL_TARGETS)
endif

all-targets: $(ALL_TARGETS)

all-libs: $(LIBS)

##############################################################################

# Delete all object files and libraries
clean:
	-$(DELETE) $(BUILD_DIR)/obj
	-$(DELETE) $(BUILD_DIR)/obj.shared
	-$(DELETE) $(BUILD_DIR)/shared
	-$(DELETE) $(BUILD_DIR)/PatchForSPE
	-$(DELETE) $(OUTPUT_LIB)
	-$(DELETE) $(BUILD_DIR)/compiler.log
	-$(DELETE) $(BUILD_DIR)/clib4.library*
	-$(DELETE) clib4.lha
	-$(DELETE) clib4.bak
	-$(DELETE) $(DPKG_LIB)
	-$(DELETE) $(DPKG_LIB).deb
	-cd test_programs; make clean

##############################################################################

# Update the version numbers bound to the individual libraries
version:
	$(COPY) c.lib_rev.rev amiga/amiga.lib_rev.rev
	$(COPY) c.lib_rev.rev math/m.lib_rev.rev
	$(COPY) c.lib_rev.rev math/crypt.lib_rev.rev
	$(COPY) c.lib_rev.rev math/pthread.lib_rev.rev
	bumprev amiga.lib
	bumprev c.lib
	bumprev m.lib
	bumprev crypt.lib
	bumprev pthread.lib

# Shared clib4.library rules

clib4.library.debug: $(OBJ_C_LIB)
	$(VERBOSE)$(CC) -o $(BUILD_DIR)/$@ $(CFLAGS) $(BUILD_DIR)/shared/shared_library/clib4.o $(BUILD_DIR)/shared/shared_library/math.o $(OBJ_C_LIB) $(DLIBS) -Wl,--cref,-M,-Map=$(BUILD_DIR)/$@.map

clib4.library: clib4.library.debug
	cp $(BUILD_DIR)/$< $(BUILD_DIR)/$@
	$(STRIP) -R.comment -R.sdata2 --strip-unneeded-rel-relocs $(BUILD_DIR)/$@

##############################################################################

# General build rules for all object files and the individual libraries

$(OUTPUT_LIB)/%.o : AFLAGS += $(LARGEDATA)
$(OUTPUT_LIB)/%.o : %.S
	$(VERBOSE)$(ASSEMBLE)

$(OUTPUT_LIB)/%.o : CFLAGS += $(LARGEDATA)
$(OUTPUT_LIB)/%.o : %.c
	$(VERBOSE)$(COMPILE)

$(OUTPUT_LIB)/crt0.o : $(LIB_DIR)/crt0.S
	$(VERBOSE)$(ASSEMBLE)
	-$(COPY) $(OUTPUT_LIB)/crt0.o $(INSTALL_PREFIX)/lib/

$(OUTPUT_LIB)/crtbegin.o : CFLAGS = $(STABS) $(OPTIONS) $(INCLUDES) -O0 -fno-aggressive-loop-optimizations
$(OUTPUT_LIB)/crtbegin.o : $(LIB_DIR)/crtbegin.c
	$(VERBOSE)$(COMPILE)
	-$(COPY) $(OUTPUT_LIB)/crtbegin.o $(INSTALL_PREFIX)/lib/

$(OUTPUT_LIB)/crtend.o : CFLAGS = -O0 $(OPTIONS) $(INCLUDES) -fno-aggressive-loop-optimizations
$(OUTPUT_LIB)/crtend.o : $(LIB_DIR)/crtend.c
	$(VERBOSE)$(COMPILE)
	-$(COPY) $(OUTPUT_LIB)/crtend.o $(INSTALL_PREFIX)/lib/

$(OUTPUT_LIB)/shcrtbegin.o : CFLAGS += $(PIC) $(STABS) -O0 -fno-aggressive-loop-optimizations
$(OUTPUT_LIB)/shcrtbegin.o : $(LIB_DIR)/shcrtbegin.c
	$(VERBOSE)$(COMPILE)
	-$(COPY) $(OUTPUT_LIB)/shcrtbegin.o $(INSTALL_PREFIX)/lib/

$(OUTPUT_LIB)/shcrtend.o : CFLAGS += $(PIC) -O0 -fno-aggressive-loop-optimizations
$(OUTPUT_LIB)/shcrtend.o : $(LIB_DIR)/shcrtend.c
	$(VERBOSE)$(COMPILE)
	-$(COPY) $(OUTPUT_LIB)/shcrtend.o $(INSTALL_PREFIX)/lib/

##############################################################################

define COMPILE
$(VERBOSE)@$(MAKEDIR) $(@D)
$(VERBOSE)echo -e "\rCompiling Static \033[0;33m[$(@D)]\033[0m \r\t\t\t\t\t\t\t\t\t\t\t \033[0;31m$(@F)\033[0m"
$(VERBOSE)$(CC) $(CFLAGS) -o $@ -c $< $(LOG_COMMAND)
endef

define COMPILE_INLINE
$(VERBOSE)@$(MAKEDIR) $(@D)
$(VERBOSE)echo -e "\rCompiling Inline Static \033[0;33m[$(@D)]\033[0m \r\t\t\t\t\t\t\t\t\t\t\t \033[0;31m$(@F)\033[0m"
$(VERBOSE)$(CC) $(CFLAGS_N) -Wno-missing-prototypes -Wno-missing-declarations -D__timespec_defined -o $@ -c $< $(LOG_COMMAND)
endef

define COMPILE_ASM
$(VERBOSE)@$(MAKEDIR) $(@D)
$(VERBOSE)echo -e "\rCompiling Static ASM \033[0;33m[$(@D)]\033[0m \r\t\t\t\t\t\t\t\t\t\t\t \033[0;31m$(@F)\033[0m"
$(VERBOSE)$(CC) -o $@ -c $< $(LOG_COMMAND)
endef

define COMPILE_SHARED
$(VERBOSE)@$(MAKEDIR) $(@D)
$(VERBOSE)echo -e "\rCompiling Shared \033[0;33m[$(@D)]\033[0m \r\t\t\t\t\t\t\t\t\t\t\t \033[0;31m$(@F)\033[0m"
$(VERBOSE)$(CC) $(CFLAGS) $(PIC) -DSHARED -o $@ -c $< $(LOG_COMMAND)
endef

define COMPILE_SHARED_ASM
$(VERBOSE)@$(MAKEDIR) $(@D)
$(VERBOSE)echo -e "\rCompiling Shared Asm \033[0;33m[$(@D)]\033[0m \r\t\t\t\t\t\t\t\t\t\t\t \033[0;31m$(@F)\033[0m"
$(VERBOSE)$(CC) $(PIC) -DSHARED -o $@ -c $< $(LOG_COMMAND)
endef

define ASSEMBLE
$(VERBOSE)@$(MAKEDIR) $(@D)
$(VERBOSE)echo -e "\rAssembling \033[0;33m[$(@D)]\033[0m \r\t\t\t\t\t\t\t\t\t\t\t \033[0;31m$(@F)\033[0m"
$(VERBOSE)$(CC) $(AFLAGS) -o $@ -c $< $(LOG_COMMAND)
endef

define COMPILE_REG
$(VERBOSE)@$(MAKEDIR) $(@D)
$(VERBOSE)echo -e "\rAssembling with regnames \033[0;33m[$(@D)]\033[0m \r\t\t\t\t\t\t\t\t\t\t\t \033[0;31m$(@F)\033[0m"
$(VERBOSE)$(CC) -mvrsave -mregnames -DVRSAVE -o $@ -c $< $(LOG_COMMAND)
endef

define COMPILE_ALTIVEC_REG
$(VERBOSE)@$(MAKEDIR) $(@D)
$(VERBOSE)echo -e "\rAssembling altivec \033[0;33m[$(@D)]\033[0m \r\t\t\t\t\t\t\t\t\t\t\t \033[0;31m$(@F)\033[0m"
$(VERBOSE)$(CC) -maltivec -mabi=altivec -mvrsave -mregnames -DVRSAVE -o $@ -c $< $(LOG_COMMAND)
endef

define COMPILE_SPE_REG
$(VERBOSE)@$(MAKEDIR) $(@D)
$(VERBOSE)echo -e "\rAssembling SPE with regnames \033[0;33m[$(@D)]\033[0m \r\t\t\t\t\t\t\t\t\t\t\t \033[0;31m$(@F)\033[0m"
$(VERBOSE)$(CC) $(AFLAGS) -mregnames -DVRSAVE -o $@ -c $< $(LOG_COMMAND)
endef

define COMPILE_SPE
$(VERBOSE)@$(MAKEDIR) $(@D)
$(VERBOSE)echo -e "\rPreprocessing and compiling SPE \033[0;33m[$(@D)]\033[0m \r\t\t\t\t\t\t\t\t\t\t\t \033[0;31m$(@F)\033[0m"
$(VERBOSE)$(CC) -c $(CFLAGS) -mno-regnames -S -o $@_in $< $(LOG_COMMAND)
$(VERBOSE)$(BUILD_DIR)/PatchForSPE $@_in $@.S >/dev/null
$(VERBOSE)$(CC) $(CFLAGS) -c $@.S -o $@ $(LOG_COMMAND)
$(VERBOSE)-$(DELETE) $@_in $@.S
endef

define COMPILE_SHARED_SPE
$(VERBOSE)@$(MAKEDIR) $(@D)
$(VERBOSE)echo -e "\rPreprocessing and compiling SPE \033[0;33m[$(@D)]\033[0m \r\t\t\t\t\t\t\t\t\t\t\t \033[0;31m$(@F)\033[0m"
$(VERBOSE)$(CC) -c $(PIC) -mabi=spe $(CFLAGS) -mno-regnames -S -o $@_in $< $(LOG_COMMAND)
$(VERBOSE)$(BUILD_DIR)/PatchForSPE $@_in $@.S >/dev/null
$(VERBOSE)$(CC) $(PIC) -mabi=spe $(CFLAGS) -c $@.S -o $@ $(LOG_COMMAND)
$(VERBOSE)-$(DELETE) $@_in $@.S
endef

define MAKELIB
$(VERBOSE)@$(MAKEDIR) $(@D)
$(VERBOSE)@$(DELETE) $@
$(VERBOSE)echo -e "\rMaking Static \033[0;31m$@\033[0m"
$(VERBOSE)@$(AR) $@ $^ $(LOG_COMMAND)
$(VERBOSE)@$(RANLIB) $@ $(LOG_COMMAND)
endef

define MAKESHARED
$(VERBOSE)@$(MAKEDIR) $(@D)
$(VERBOSE)@$(DELETE) $@
$(VERBOSE)echo -e "\rMaking Shared \033[0;31m$@\033[0m"
$(VERBOSE)$(CC) -nostdlib -shared -o $@ $(OUTPUT_LIB)/shcrtbegin.o $^ $(OUTPUT_LIB)/shcrtend.o $(LOG_COMMAND) -Wl,-soname,$(@F)
endef

PatchForSPE : $(LIB_ROOT)/misc/PatchForSPE.cpp
	$(HOST_CXX) -o $(BUILD_DIR)/$@ $<

ifdef SPE
.NOTPARALLEL: PatchForSPE
endif

compile-tests:
	+make -C $(LIB_ROOT)/test_programs; CC="$(CC)" CXX="$(CXX)" COPY="$(COPY)" DELETE="$(DELETE)" MAKEDIR="$(MAKEDIR)"

install:
	$(DELETE) $(INSTALL_PREFIX)/include/*
	$(DELETE) $(INSTALL_PREFIX)/lib/*
	$(DELETE) $(INSTALL_PREFIX)/clib4.library*
	$(COPY) $(OUTPUT_LIB)/* $(INSTALL_PREFIX)/lib/
	$(COPY) libs/libauto.a $(INSTALL_PREFIX)/lib/
	$(COPY) $(BUILD_DIR)/clib4.library* $(INSTALL_PREFIX)
	$(COPY) $(LIB_ROOT)/library/include/* $(INSTALL_PREFIX)/include/

release:
	-$(DELETE) clib4.lha
	-$(DELETE) clib4.info
	-$(MAKEDIR) clib4/include
	-$(MAKEDIR) clib4/lib
	-$(COPY) *.md clib4/
	-$(COPY) LICENSE* clib4/
	-$(COPY) installer/Install* clib4/
	-$(COPY) installer/clib4.info .
	-$(COPY) installer/README.md.info clib4/
	-$(COPY) $(BUILD_DIR)/clib4.library clib4/
	-$(COPY) misc clib4/
	-$(COPY) libs/libauto.a clib4/lib/
	-$(COPY) $(OUTPUT_LIB)/* clib4/lib/
	-$(COPY) $(LIB_ROOT)/library/include/* clib4/include/
	lha -ao5i clib4.lha clib4 clib4.info
	-$(DELETE) clib4
	-$(DELETE) clib4.info

dpkg:
	-$(DELETE) $(DPKG_LIB)
	-$(DELETE) $(DPKG_LIB).deb
	-$(MAKEDIR) $(DPKG_LIB)$(INSTALL_PREFIX)/lib
	-$(MAKEDIR) $(DPKG_LIB)$(INSTALL_PREFIX)/include
	-$(MAKEDIR) $(DPKG_LIB)/DEBIAN
	-$(COPY) libs/libauto.a $(DPKG_LIB)$(INSTALL_PREFIX)/lib/
	-$(COPY) $(OUTPUT_LIB)/* $(DPKG_LIB)$(INSTALL_PREFIX)/lib/
	-$(COPY) $(LIB_ROOT)/library/include/* $(DPKG_LIB)$(INSTALL_PREFIX)/include/
	-$(COPY) misc/control $(DPKG_LIB)/DEBIAN/
	dpkg --build $(DPKG_LIB)
