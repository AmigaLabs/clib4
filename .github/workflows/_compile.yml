name: Compile for PowerPC

on:
  workflow_call:
    inputs:
      git_tag:
        description: 'Git tag to use'
        required: true
        type: string
      gcc:
        description: 'GCC version to use'
        required: true
        default: 11
        type: string
      spe:
        description: 'Compile with SPE'
        required: false
        default: "no"
        type: string
    secrets:
      GITHUB_TOKEN:
        description: 'GitHub token'
        required: true

env:
  archive_name: clib4-${{ inputs.git_tag }}${{ inputs.spe == 'yes' && '_SPE' || '' }}

jobs:
  compile:
    runs-on: ubuntu-latest
    container:
      image: walkero/amigagccondocker:os4-gcc${{ inputs.gcc }}
      volumes:
        - '${{ github.workspace }}:/opt/code'
    steps:
      - name: Pull code
        uses: actions/checkout@v4

      - name: Add repository to git safe directories
        run: |
          git config --global --add safe.directory $GITHUB_WORKSPACE
          git config --global --add safe.directory /opt/code

      - name: Compile clib4
        uses: ./.github/actions/compile
        with:
          git_tag: ${{ inputs.git_tag }}
          spe: ${{ inputs.spe }}

      - name: Create the LHA release archive
        run: |
          make -f GNUmakefile.os4 release && \
          mv clib4.lha ${{ env.archive_name }}.lha

      - name: Create the DEB release archive
        run: |
          make -f GNUmakefile.os4 dpkg DPKG_LIB=${{ env.archive_name }}_amd64

      - name: Upload LHA release file in GitHub
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: /opt/code/${{ env.archive_name }}.lha
          asset_name: ${{ env.archive_name }}.lha
          asset_content_type: application/x-lzh-compressed

      - name: Install GitHub binary
        uses: ./.github/actions/install-gh

      - name: Upload DEB release file in GitHub
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: /opt/code/${{ env.archive_name }}_amd64.deb
          asset_name: ${{ env.archive_name }}_amd64.deb
          asset_content_type: application/vnd.debian.binary-pac
